准备条件：
1、mysql
version: mysql 8.0+
application.properties更改database、username、password

2、rabbitmq
localhost:15672（工作台端口是15672，mq端口是5672）
guest/guest

#############################################
#############################################

1、springboot 事件驱动演示
listener包下的event和listener
测试类 OrderRecordController （Pulisher)

2、rabbitTemplate的消息发送和接收
RabbitmqConfig （1）基本消息模型 （2）singleListenerContainer
CommonLister 消费者
测试类 RabbitController（String、bean、map三种类型的发送示例）

3、商城下单（mq削峰）
initService 模拟并发抢单（生产者）
RobbingListener 监听者
测试类 ConcurrencyController
RabbitmqConfig 商品抢单消息模型创建

4、消息确认机制及并发配置之SimpleMessageListenerContainer
2个重要点：simpleContainer（设置并发量、一次拉取量等）、ChannelAwareMessageListener

RabbitmqConfig 内用的是 simpleContainer(绑定了SimpleListener)
SimpleListener（监听器） 实现了ChannelAwareMessageListener接口。内有消息确认机制、拒绝
测试类 AcknowledgeController

mq工作台里可以看到Consumer有10个，就是simpleContainer里配置的并发数为10，一次拉取5条

5、消息确认机制之商城下单（下单和抢单不是一回事）
RabbitmqConfig 的 SimpleMessageListenerContainer（绑定了userOrderListener）
UserOrderListener 监听器
测试类 UserOrderController
（1）这里是实战商城抢单的核心入口
（2）里面加了异步日志

6、用户登录异步写日志、异步发邮件
测试类 UserController、MailContrller
Listener（监听者） CommonMqListener

#############################################
#############################################

死信队列（延迟队列）
列信队列，不面对生产者

业务场景1
用户提交订单之后，发送一条消息并且设置消息过期时间为半个小时(或其他时间)，如果超过设置的这个时间，那么消息自动变成死信，
就会被转发到死信队列中，这时候我们可以监听死信队列中的消息，然后查询一下订单的状态，
如果还是未支付的话，那么更新订单的状态为已取消。

手机号注册，发送短信验证码

1、死信演示
RabbitmqConfig  死信队列消息模型
Listener（监听者）  监听消费死信队列中的消息。10秒一到，从队列移到死信队列里
测试类 DeadQueueContrller
（1）请求消息先到队列
（2）10秒进入死信队列
（3）监听死信队列的监听者进行消费

2、实战 用户下单超时没支付自动失效
RabbitmqConfig 用户下单支付超时死信队列模型
CommonMqListener UserOrderDeadListener

测试类 UserOrderContrller

3、死信队列之动态设置TTL（存活时间 Time to Live）
RabbitmqConfig 死信队列动态设置TTL消息模型
CommonMqListener  UserOrderDeadListener
时间设置代码 在UserOrderController里的 pushUserOrderV3 方法




